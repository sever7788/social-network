{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","../../modules/BrowserRouter.js","../../modules/HashRouter.js","../../modules/utils/locationUtils.js","../../modules/Link.js","../../modules/NavLink.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","../node_modules/tiny-warning/dist/tiny-warning.esm.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","BrowserRouter","history","createHistory","_this","render","Router","children","HashRouter","resolveToLocation","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","shiftKey","LinkAnchor","forwardedRef","innerRef","navigate","onClick","rest","target","event","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","isModifiedEvent","ref","Link","component","replace","RouterContext","Consumer","context","invariant","location","href","createHref","push","createElement","NavLink","ariaCurrent","activeClassName","activeStyle","classNameProp","className","exact","isActiveProp","isActive","locationProp","sensitive","strict","styleProp","style","toLocation","path","pathname","escapedPath","match","matchPath","joinClassnames","classnames","filter","i","join","DialogItem","id","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator","withRouter","warning","condition"],"mappings":"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","file":"static/js/4.a8c2b5b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2qcfA\",\"dialogsItems\":\"Dialogs_dialogsItems__3kkzf\",\"active\":\"Dialogs_active__1r8_I\",\"messages\":\"Dialogs_messages__U48Nw\"};","import React from 'react';\r\nimport { Redirect } from \"./../../node_modules/react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import React from \"react\"\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\"\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return (<div className={s.message}>{props.message}</div>);\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\"\r\nimport s from './Dialogs.module.css'\r\nimport { Redirect } from \"./../../../node_modules/react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../redux/utils/validators\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\"\r\n                 placeholder=\"Enter your message\"  validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    if (props.isAuth == false) return <Redirect to={\"/login\"} />\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit = {addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport { sendMessageCreator} from \"../../redux/dialogs-reducer\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom/cjs/react-router-dom.min\";\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n\r\n\r\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n"],"sourceRoot":""}