{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","memo","postsElements","posts","map","p","key","id","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","action","addPostActionCreator","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","fullName","photos","large","alt","ava","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Profile","store","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.f81e3f93.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from \"./../../node_modules/react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__2cmwm\",\"contacts\":\"ProfileInfo_contacts__35Cjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__XLrTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3opG6\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nconst Post = (props) => {\r\n  return <div className={s.item}>\r\n    <img src='https://www.vokrug.tv/pic/product/6/f/e/2/6fe2523ab4de68e3981b29c9f9f00f17.jpeg'></img>\r\n      {props.message} \r\n      <div>\r\n      <span>{props.likesCount}like</span>\r\n    </div>\r\n  </div>\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { maxLengthCreator, required} from './../../../redux/utils/validators/index';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet addPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostText\"\r\n         placeholder=\"Enter your post\" validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n// const addPostFormRedux = reduxForm({ form: \"addPost\" })(addPostForm);\r\nconst AddPostFormRedux = reduxForm({form:\"addPost\"})(addPostForm);\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  let postsElements = props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />);\r\n  return <div>\r\n    <h3 className=\"heading\">My posts</h3>\r\n    <AddPostFormRedux onSubmit={addNewPost} />\r\n    <div className={s.posts}>\r\n      {postsElements}\r\n    </div>\r\n  </div>\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    statusInputRef= React.createRef();\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({                 //ФИШКА РЕАКТА! ЭТО НЕ МОЯ ФУНКЦИЯЯ!!!!\r\n            editMode: true,\r\n            status: this.props.status\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n       this.setState({\r\n           status: e.currentTarget.value\r\n       }); \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.status!==this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status||\"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProfileStatus;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateMode = ()=>{\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    \r\n    const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value); \r\n     }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from \"./ProfileStatus.jsx\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div id=\"fullName\"><h2>{props.profile.fullName}</h2></div>\r\n                <img src={props.profile.photos.large} alt=\"\" className={s.ava} />\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div id=\"description\">\r\n                <div id=\"aboutMe\">{props.profile.aboutMe}</div>\r\n                <div id=\"contacts\">{/*props.profile.contacts*/}</div>\r\n                <div id=\"lookingForAJob\">{props.profile.lookingForAJob ? 'В поиске работы' : null}</div>\r\n                <div id=\"lookingForAJobDescription\">{props.profile.lookingForAJob ? 'Описание: ' + props.profile.lookingForAJobDescription : null}</div>\r\n                <div id=\"contacts\">\r\n                    <div> {props.profile.contacts.facebook}</div>\r\n                    <div> {props.profile.contacts.website}</div>\r\n                    <div> {props.profile.contacts.vk}</div>\r\n                    <div> {props.profile.contacts.twitter}</div>\r\n                    <div> {props.profile.contacts.instagram}</div>\r\n                    <div> {props.profile.contacts.youtube}</div>\r\n                    <div> {props.profile.contacts.github}</div>\r\n                    <div> {props.profile.contacts.mainLink}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo; ","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) =>{\r\n    return <div className={s.profile}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer store={props.store}/>\r\n    </div>\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        return <Profile {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus} />\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}